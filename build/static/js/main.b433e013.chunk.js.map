{"version":3,"sources":["store/actions/index.js","ServerPath.jsx","components/NavBar/userNav.js","components/NavBar/Nav.js","pages/signin.jsx","pages/home.jsx","pages/register.jsx","pages/userTest.js","pages/Administrator/done.jsx","pages/Administrator/signin.jsx","pages/Administrator/home.jsx","App.js","serviceWorker.js","store/reducers/userDetails.js","store/reducers/index.js","index.js"],"names":["userUpdateAuth","val","type","value","userUpdateName","userUpdateRole","hostPath","BuildHostPath","host","window","location","hostname","protocol","User","history","useHistory","user","useSelector","state","dispatch","useDispatch","useState","name","show","details","setDetails","useEffect","ServerPath","console","log","auth","role","Button","variant","onClick","Axios","get","then","res","data","message","push","catch","err","Nav","Row","Col","className","SignIn","setmessage","document","title","Container","Jumbotron","id","event","preventDefault","email","getElementById","password","axios","displayName","info","href","Home","fluid","Register","setMessage","registed","setRegister","Form","action","method","Control","size","placeholder","required","url","userError","UserTest","Done","granted","setGranted","Group","as","Label","Check","label","checked","error","orgName","allocatRooms","authLocal","authGoggle","pName","pEmail","orgRooms","toString","authGoogle","post","App","isLoaded","setLoaded","withCredentials","isAuth","path","exact","component","userTest","AdminHome","AdminSignIn","done","Boolean","match","userDetails","rootReducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b433e013.chunk.js","sourcesContent":["export const userUpdateAuth = (val) => {\n    return {\n        type: \"USER_UPDATE_AUTH\",\n        value: val\n    };\n}\n\nexport const userUpdateName = (val) => {\n    return {\n        type: \"USER_UPDATE_NAME\",\n        value: val\n    };\n}\n\nexport const userUpdateEmail = (val) => {\n    return {\n        type: \"USER_UPDATE_EMAIL\",\n        value: val\n    };\n}\n\nexport const userUpdateRole = (val) => {\n    return {\n        type: \"USER_UPDATE_ROLE\",\n        value: val\n    };\n}\n\n","import React from \"react\";\n\nlet hostPath = \"\";\n\nfunction BuildHostPath() {\n    \n    const host = window.location.hostname;\n    const protocol = window.location.protocol;\n\n    if(host === \"localhost\") {\n        hostPath = protocol + \"//\" + host + \":8080\";\n        \n    } else {\n        hostPath = protocol +\"//\" + host;\n    }  \n}\n\nexport default BuildHostPath;\nexport { hostPath };","import React, { useState, useEffect } from 'react';\nimport ServerPath, { hostPath } from \"../../ServerPath\";\nimport Axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {userUpdateAuth, userUpdateName, userUpdateRole} from \"../../store/actions\"\n\nimport Button from \"react-bootstrap/Button\";\n\n\n\nfunction User() {\n\n    const history = useHistory();\n    const user = useSelector(state => state.user);\n    const dispatch = useDispatch();\n    \n    const [details, setDetails] = useState({\n        name: '',\n        show: false\n    });\n\n    useEffect(() => {\n        ServerPath();\n    },[])\n\n    useEffect(() => {\n        getUser();\n    }, [user]);\n\n    function getUser() {\n\n        console.log(user);\n        if(user.auth) {\n\n            if(user.role == \"superAdmin\") {\n                setDetails({\n                    name: \"High-View Studios\",\n                    show: true\n                });\n            } else {\n                setDetails({\n                    name: user.name,\n                    show: true\n                });\n            }\n        } else {\n            setDetails({\n                name: '',\n                show: false\n            })\n        }\n    }\n\n    function logOut() {\n        Axios.get(\"/logout\")\n        .then(res => {\n            console.log(res.data.message);\n            if(res.data.message === \"User logged out\") {\n                dispatch(userUpdateAuth(false));\n                dispatch(userUpdateName(''));\n                dispatch(userUpdateRole(''));\n                history.push('/signin');\n            }\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    return (\n        <div>\n        {/* <Button variant=\"warning\" onClick={logOut}>Log Out</Button> */}\n        {details.show ? (\n            <div>\n            <strong>User: {details.name}</strong><br />\n            <Button variant=\"warning\" onClick={logOut}>Log Out</Button>\n            </div>\n        ) : (\n            <div>\n            </div>\n        )}   \n        </div>\n        \n    )\n}\n\nexport default User;","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport UserNav from './userNav';\n\nfunction Nav() {\n  return (\n    <nav>\n    <Row>\n    <Col></Col>\n    <Col>\n        <h1><strong>My STAFF</strong></h1>\n        <h2><strong>Space, Times, Flexible, Facilities</strong></h2>\n    </Col>\n    <Col>\n        <div className=\"user-nav\">\n          <UserNav />\n        </div>\n      </Col>\n      </Row>\n    </nav>\n  );\n}\n\nexport default Nav;","import React, { useState, useEffect} from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport ServerPath, { hostPath } from \"../ServerPath\";\nimport {useDispatch, useSelector} from 'react-redux';\nimport {userUpdateAuth, userUpdateName, userUpdateRole} from '../store/actions';\n\n//Styles\nimport Button from \"react-bootstrap/Button\"\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nfunction SignIn() {\n\n  const user = useSelector(state => state.user);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [message, setmessage] = useState('');\n\n  useEffect(() => {\n    document.title = \"STAFF - Sign In\";\n    ServerPath();\n    onOpen();\n  },[]);\n\n  function onOpen() {\n    if(user.auth) {\n      history.push('/');\n    }\n  }\n\n  return (\n    <div className=\"body\">\n    <Container className=\"p-3\">\n      <Jumbotron className=\"back-color\">\n        <h3>Please Sign In!</h3>\n        <form>\n          <label id=\"lblEmail\">Email:</label><br />\n          <input id=\"txtEmail\"type=\"email\"></input><br /><br />\n          <label id=\"lblPassword\">Password:</label><br />\n          <input id=\"txtPassword\" type=\"password\"></input>\n          <p>{message}</p>\n        </form><br />\n        \n        <Button variant=\"warning\" onClick={logIn}>Log in</Button>\n        <Button variant=\"warning\" onClick={register}>Register</Button><br /><br />\n        <Button variant=\"danger\" href={hostPath + \"/auth/google\"}><i className=\"fab fa-google\"></i> Log in with Google</Button>\n      </Jumbotron>\n    </Container>\n    </div>\n  );\n\n  function logIn(event) {\n    event.preventDefault();\n    const email = document.getElementById(\"txtEmail\").value;\n    const password = document.getElementById(\"txtPassword\").value;\n\n    axios.get(\"/login?email=\" + email + \"&password=\" + password)\n    .then(res => {\n        const message = res.data.message;\n        if(message === \"Logged in successful\") {\n          console.log(res.data)\n            dispatch(userUpdateAuth(true));\n            dispatch(userUpdateName(res.data.displayName));\n            dispatch(userUpdateRole(res.data.role));\n            history.push('/');\n        } else {\n            setmessage(res.data.info);\n        }\n    })\n    .catch(err => {\n        console.log(err);\n    });\n  }\n\n  function register() {\n    history.push(\"/register\");\n  }\n}\n\nexport default SignIn;\n","import React, { useEffect, useContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userUpdateName } from '../store/actions';\nimport { useHistory } from 'react-router-dom';\n\n//Styles\nimport Button from \"react-bootstrap/Button\"\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\n\nfunction Home() {\n\n  const user = useSelector(state => state.user);\n\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    document.title = \"STAFF\";\n    onOpen();\n  },[])\n\n  function onOpen() {\n    if(user.auth == false) {\n      history.push(\"/signin\");\n    } else if(user.role == \"superAdmin\") {\n      history.push(\"/administrator\");\n    }\n  }\n\n  function test() {\n      dispatch(userUpdateName());\n  }\n\n  return (\n    <div className=\"body\">\n        <Container fluid className=\"p-3\">\n            <Jumbotron className=\"back-color\">\n              <h1>Home</h1>\n              <Button variant=\"warning\" onClick={test}>Test</Button>\n              <Button variant=\"warning\" onClick={() => history.push('/administrator/home')}>Home</Button>\n            </Jumbotron>\n        </Container>\n    </div>\n  );\n}\n\nexport default Home;","import React, {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport { useHistory } from 'react-router-dom';\nimport {useSelector} from 'react-redux';\n\n//Styles\nimport Button  from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Form from \"react-bootstrap/Form\";\n\nfunction Register() {\n\n    const history = useHistory();\n    const user = useSelector(state => state.user);\n\n    const [message, setMessage] = useState('');\n    const [registed, setRegister] = useState(false);\n\n\n    useEffect(() => {\n        document.title = \"Register\";\n        onOpen();\n    },[]); \n\n    function onOpen() {\n        if(user.auth) {\n            history.push('/');\n        }\n    }\n\n    function handleClick(event) {\n        event.preventDefault();\n        setMessage('');\n        const name = document.getElementById(\"name\").value;\n        const email = document.getElementById(\"email\").value;\n        const password = document.getElementById(\"password\").value;\n        const confirmpassword = document.getElementById(\"confirmpassword\").value;\n        \n        const url = \"/register/\"+ name +\"/\"+ email +\"/\"+ password +\"/\"+ confirmpassword;\n        axios.get(url)\n        .then(res => {\n            if(res.data.message === \"User registered successfully\") {\n                setRegister(true);\n            } else {\n                if(res.data.userError === \"Yes\") {\n                    setMessage(res.data.message);\n                }\n        }\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    function handleLogin() {\n        setRegister(false);\n        history.push('/signin')\n    }\n\n    \n    return (\n        <div className=\"body\">\n        <Container className=\"p-3\">\n            <Jumbotron className=\"back-color\">\n            <div className=\"header\">\n                <h1>Register</h1>\n                {registed ? (\n                    <div>\n                    <h2> You have successfully been registered</h2><br />\n                    <p>Please log in</p>\n                    <Button type=\"submit\" onClick={handleLogin} variant=\"primary\">Login</Button>\n                    </div>\n                ) : (\n                    <Form action=\"/form\" method=\"POST\">\n                    <Form.Control id=\"name\" size=\"sm\" type=\"text\" placeholder=\"Name\" required/>\n                    <br />\n                    <Form.Control id=\"email\" size=\"sm\" type=\"email\" placeholder=\"Email\" required/>\n                    <br />\n                    <Form.Control id=\"password\" size=\"sm\" type=\"password\" placeholder=\"Password\" required/>\n                    <br />\n                    <Form.Control id=\"confirmpassword\" size=\"sm\" type=\"password\" placeholder=\"Confirm Password\" required />\n                    <br />\n                    <p>{message}</p>\n                    <Button type=\"submit\" onClick={handleClick} variant=\"primary\">Register</Button>\n                </Form> \n                )}\n            </div>\n            </Jumbotron>\n        </Container>\n        </div>\n    )\n}\n\nexport default Register;","import React, { useEffect} from 'react';\n\n//Styles\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nfunction UserTest() {\n\n  useEffect(() => {\n    document.title = \"TEST\";\n  },[]);\n\n  return (\n    <div className=\"body\">\n      <Container className=\"p-3\">\n            <Jumbotron className=\"back-color\">\n                <h1>TEST</h1>\n            </Jumbotron>\n        </Container>\n    </div>\n  );\n}\n\nexport default UserTest;","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport Button from \"react-bootstrap/Button\"\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Form from \"react-bootstrap/Form\";\nimport { Col } from 'react-bootstrap';\nimport Axios from 'axios';\n\nfunction Done() {\n\n    const history = useHistory();\n    const user = useSelector(state => state.user);\n    const [message, setMessage] = useState('');\n\n    if(!user.auth || user.role != \"superAdmin\") {\n            history.push('/administrator/signin');\n    }\n\n    function handleClickNew(event) {\n        event.preventDefault();\n        \n        const data = { name: document.getElementById('txtOrgName').value}\n        Axios.post('/registerPost', data)\n        .then(res => {\n            console.log(res.data);\n        })\n        .catch(err => {\n            console.log(err);\n        })\n\n    }\n\n    function handleClick(event) {\n        event.preventDefault();\n    \n        const orgName = document.getElementById(\"txtOrgName\").value;\n        const AllocatRooms = document.getElementById(\"txtAlRooms\").value;\n        const authLocal = document.getElementById(\"ckbLocal\").checked;\n        const authGoggle = document.getElementById(\"ckbGoggle\").checked;\n        const pName = document.getElementById(\"txtName\").value;\n        const pEmail = document.getElementById(\"txtEmail\").value;\n    \n        const url = \"/administrator/addOrganisation/\"+orgName+\"/\"+AllocatRooms+\"/\"+authLocal+\"/\"+authGoggle+\"/\"+pName+\"/\"+pEmail;\n    \n        Axios.get(url)\n        .then(res => {\n          const data = res.data;\n          console.log(res.data);\n    \n          if(data.error != \"null\") {\n            console.log(data.message);\n          } else if(data.userError == \"Yes\") {\n              setMessage(data.message);\n          } else if (data.message == \"Successfully added\") {\n            history.push(\"/\");\n            console.log(\"DONE!\");\n          }\n        })\n        .catch(err => {\n          console.log(err);\n        })\n    \n      }\n\n    return (\n        <div>\n            <Container className=\"p-3\">\n            <Jumbotron className=\"back-color\">\n                <h1>Organisation Register</h1>\n\n                <h2>Done!</h2>\n                </Jumbotron>\n                </Container>\n        </div>\n    )\n}\n\nexport default Done;","import React, { useState, useEffect } from 'react';\nimport ServerPath, { hostPath } from \"../../ServerPath\";\nimport {useSelector} from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nfunction SignIn() {\n\n    const [granted, setGranted] = useState(true);\n    const user = useSelector(state => state.user);\n    const history = useHistory();\n\n    useEffect(() => {\n        ServerPath();\n        onOpen();\n    },[])\n\n    function onOpen() {\n        if(user.auth) {\n            if(user.role == \"superAdmin\") {\n                history.push('/');\n            } else {\n                setGranted(false);\n            }\n        }\n    }\n\n    return (\n        <div>\n        <h1>Administrator Sign In</h1>\n        {!granted ? (\n            <div>\n            <h1>Access Denied</h1>\n            </div>\n        ):(\n            <a href={hostPath + \"/auth/github\"}>Sign In With GitHub</a>\n            )}\n        </div>\n    )\n}\n\nexport default SignIn;","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport Button from \"react-bootstrap/Button\"\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Form from \"react-bootstrap/Form\";\nimport { Col } from 'react-bootstrap';\nimport Axios from 'axios';\n\nfunction Home() {\n\n    const history = useHistory();\n    const user = useSelector(state => state.user);\n    const [message, setMessage] = useState('');\n\n    if(!user.auth || user.role != \"superAdmin\") {\n            history.push('/administrator/signin');\n    }\n\n    function handleClickNew(event) {\n        event.preventDefault();\n\n        const orgName = document.getElementById(\"txtOrgName\").value;\n        const allocatRooms = document.getElementById(\"txtAlRooms\").value;\n        const authLocal = document.getElementById(\"ckbLocal\").checked;\n        const authGoggle = document.getElementById(\"ckbGoggle\").checked;\n        const pName = document.getElementById(\"txtName\").value;\n        const pEmail = document.getElementById(\"txtEmail\").value;\n        \n        const data = { orgName: orgName, orgRooms: allocatRooms, authLocal: authLocal.toString(), authGoogle: authGoggle.toString(), pName: pName, pEmail: pEmail}\n        Axios.post('/registerPost', data)\n        .then(res => {\n            const data = res.data;\n          console.log(res.data);\n    \n          if(data.error != \"null\") {\n            console.log(data.message);\n          } else if(data.userError == \"Yes\") {\n              setMessage(data.message);\n          } else if (data.message == \"Successfully added\") {\n            history.push(\"/administrator/done\");\n          }\n        })\n        .catch(err => {\n            console.log(err);\n        })\n\n    }\n\n    function handleClick(event) {\n        event.preventDefault();\n    \n        const orgName = document.getElementById(\"txtOrgName\").value;\n        const AllocatRooms = document.getElementById(\"txtAlRooms\").value;\n        const authLocal = document.getElementById(\"ckbLocal\").checked;\n        const authGoggle = document.getElementById(\"ckbGoggle\").checked;\n        const pName = document.getElementById(\"txtName\").value;\n        const pEmail = document.getElementById(\"txtEmail\").value;\n    \n        const url = \"/administrator/addOrganisation/\"+orgName+\"/\"+AllocatRooms+\"/\"+authLocal+\"/\"+authGoggle+\"/\"+pName+\"/\"+pEmail;\n    \n        Axios.get(url)\n        .then(res => {\n          const data = res.data;\n          console.log(res.data);\n    \n          if(data.error != \"null\") {\n            console.log(data.message);\n          } else if(data.userError == \"Yes\") {\n              setMessage(data.message);\n          } else if (data.message == \"Successfully added\") {\n            history.push(\"/administrator/done\");\n          }\n        })\n        .catch(err => {\n          console.log(err);\n        })\n    \n      }\n\n    return (\n        <div>\n            <Container className=\"p-3\">\n            <Jumbotron className=\"back-color\">\n                <h1>Organisation Register</h1>\n\n                <Form className=\"A-AddOrganisationText\" name='form'>\n                <Form.Row>\n                <Form.Group as={Col}>\n                  <Form.Label id=\"lblOrgName\">Organisation Name:</Form.Label><br />\n                  <Form.Control id=\"txtOrgName\" type=\"text\" required></Form.Control>\n                </Form.Group>\n                <Form.Group as={Col}>\n                  <Form.Label id=\"lblAlRooms\">Allocated Rooms:</Form.Label><br />\n                  <Form.Control id=\"txtAlRooms\" type=\"text\" required></Form.Control>\n                </Form.Group>\n                  </Form.Row>\n                  <Form.Label id=\"lblAuthTypes\">Types of Authencation:</Form.Label><br />\n                  <Form.Row>\n                <Form.Group as={Col}>\n                  <Form.Check id=\"ckbLocal\" type=\"checkbox\" label=\"Local Login\" />\n                </Form.Group>\n                <Form.Group as={Col}>\n                  <Form.Check id=\"ckbGoggle\" type=\"checkbox\" label=\"Google Login\" />\n                </Form.Group>\n                  </Form.Row>\n                  <Form.Label className=\"A-AddOrganisationTextColor\" id=\"lblPOC\">Point of Contact (Senior Admin):</Form.Label><br />\n                  <Form.Row>\n                <Form.Group as={Col}>\n                  <Form.Label id=\"lblName\">Name:</Form.Label><br />\n                  <Form.Control id=\"txtName\" type=\"text\" required />\n                </Form.Group>\n                <Form.Group as={Col}>\n                  <Form.Label id=\"lblEmail\">Email:</Form.Label><br />\n                  <Form.Control id=\"txtEmail\" type=\"text\" required></Form.Control>\n                </Form.Group>\n                  </Form.Row>\n                  <p>{message}</p>\n                  <Button type=\"submit\" onClick={handleClick} variant=\"warning\">Register</Button>\n                  <Button type=\"submit\" onClick={handleClickNew} variant=\"warning\">Register New</Button>\n                </Form>\n                </Jumbotron>\n                </Container>\n        </div>\n    )\n}\n\nexport default Home;","import React, { useEffect, useState } from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Axios from 'axios';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport \"./pages/partials/app.css\";\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userUpdateAuth, userUpdateName, userUpdateRole } from './store/actions';\n\nimport Nav from \"./components/NavBar/Nav\";\n\nimport SignIn from \"./pages/signin\";\nimport Home from \"./pages/home\";\nimport Register from \"./pages/register\";\nimport userTest from './pages/userTest';\nimport done from './pages/Administrator/done';\n\nimport AdminSignIn from \"./pages/Administrator/signin\"\nimport AdminHome from \"./pages/Administrator/home\";\n\n\nfunction App() {\n\n  const dispatch = useDispatch();\n  const [isLoaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    onOpen();\n  },[])\n\n  function onOpen() {\n    Axios.get(\"/auth\", {withCredentials: true })\n  .then(res => {\n\n      console.log(res.data);\n      const isAuth = res.data.auth;\n      dispatch(userUpdateAuth(isAuth));\n      if(isAuth) {\n        if(res.data.role == \"superAdmin\") {\n          dispatch(userUpdateName(\"High-ViewStudios\"));\n        } else {\n          dispatch(userUpdateName(res.data.user.displayName));\n        }\n        dispatch(userUpdateRole(res.data.role))\n      }\n      setLoaded(true);\n  })\n  .catch(err => {\n      console.log(\"Auth \" +err);\n  })\n  }\n\n  return (\n    <div>\n      {isLoaded ? (\n      <Router>\n      <div className=\"App\">\n      <Nav />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/usertest\" component={userTest} />\n          <Route path=\"/administrator\" exact component={AdminHome} />\n          <Route path=\"/administrator/signin\" component={AdminSignIn} />\n          <Route path=\"/administrator/done\" component={done} />\n        </Switch>\n        </div>\n      </Router>) : <div></div>}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const userDetails = (state = {auth: false, name: '', email: '', role:''}, action) => {\n    switch(action.type){\n        case 'USER_UPDATE_AUTH':\n            return {...state, auth: action.value};\n        case 'USER_UPDATE_NAME':\n            return {...state, name: action.value};\n        case 'USER_UPDATE_EMAIL':\n            return {...state, email: action.value};\n        case 'USER_UPDATE_ROLE':\n            return {...state, role: action.value};\n        default:\n            return state\n    }\n}\n\nexport default userDetails;","import userDetails from './userDetails';\nimport {combineReducers} from 'redux'\n\nconst rootReducer = combineReducers({\n    user: userDetails,\n});\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport rootReducer from './store/reducers';\nimport { Provider } from 'react-redux'\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}